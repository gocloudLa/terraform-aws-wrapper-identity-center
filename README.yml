module_name: Nota importante!
module_description: The Terraform Wrapper for Identity Center.
quick_start: |
  ```hcl
  identity_center_parameters = {
      enable_identity_center = true
  
      identity_users = {
        "${local.metadata.key.company}-user1" = {
          display_name = "Nombre Apellido"
          optional     = {}
          name = {
            given_name  = "Nombre"
            family_name = "Apellido"
          }
          emails = {
            primary = true
            value   = "user@domain.com"
          }
          addresses     = {}
          phone_numbers = {}
        }
      }
  
      identity_groups = {
        "CloudAdministrator" = {
          description = "This group is for users that will have Administrator Access to the different accounts in the Organization"
          users = [
            "${local.metadata.key.company}-user1"
          ]
        }
        "CloudEngineer" = {
          description = "This group is for users that will have Developer access in the different accounts and Administrator Access in the Workload accounts"
          users = [
          ]
        }
      }
  
      external_identity_groups = [
        "ExternalGroup1"
      ]
  
      identity_permission_sets = {
        "Admin" = {
          aws_managed_policies = [
            "arn:aws:iam::aws:policy/AdministratorAccess",
            "arn:aws:iam::aws:policy/job-function/Billing"
          ]
          description      = "Administrator and Billing permission Set"
          relay_state      = null
          session_duration = "PT8H"
        }
        "ReadOnly" = {
          inline_policies = {
            "S3List" = {
              effect = "Allow",
              actions = [
                "s3:ListBucket",
                "s3:ListAllMyBuckets"
              ],
              resources = [
                "*"
              ]
            },
            "S3" = {
              effect = "Allow",
              actions = [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:GetObjectVersion",
                "s3:GetBucketPolicy",
                "s3:GetBucketAcl",
                "s3:GetBucketVersioning",
                "s3:GetLifecycleConfiguration"
              ],
              resources = [
                "arn:aws:s3:::*",
                "arn:aws:s3:::*/*",
              ]
            }
          }
          aws_managed_policies = [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess",
            "arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess",
            "arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess",
            "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
            "arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess"
          ]
          description      = "EC2, SQS and Cloudwatch Read Only permission Set + S3 Read/Write"
          relay_state      = "https://us-east-2.console.aws.amazon.com/cloudwatch/"
          session_duration = "PT8H"
        }
      }
  
      identity_target_accounts = {
        # ROOT
        "${local.metadata.public_domain}" = {
          "CloudAdministrator" = {
            permission_set = "Admin"
          }
          "CloudEngineer" = {
            permission_set = "ReadOnly"
          }
        }
        # NEW
        "${local.metadata.public_domain}-dev" = {
          "CloudAdministrator" = {
            permission_set = "Admin"
          }
          "CloudEngineer" = {
            permission_set = "Admin"
          }
          "ExternalGroup1" = {
            permission_set = "Admin"
          }
        }
      }
    }
  ```
features: []
important_notes: ""
input_table: |
  | enable_identity_center | Enables or disables the organization service | `bool` | `false` | no |
  | identity_groups | A list of principal services that will be enabled at an organization level | `any` | `{}` | no |
  | identity_users | A list of principal services that will be enabled at an organization level | `any` | `{}` | no |
  | identity_permission_sets | A list of principal services that will be enabled at an organization level | `any` | `{}` | no |
  | identity_target_accounts | To be defined later | `any` | `{}` | no |
  | organization_account_ids | A map of accounts that will be created under an organization or Organization Unit | `any` | `{}` | no |
